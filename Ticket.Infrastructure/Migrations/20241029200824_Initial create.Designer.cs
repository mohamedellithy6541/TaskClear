// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Ticket.Infrastructure.Data;

#nullable disable

namespace Ticket.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20241029200824_Initial create")]
    partial class Initialcreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("Ticket.Domain.Models.TicketModule", b =>
                {
                    b.Property<int>("TicketId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("FromData")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("ToData")
                        .HasColumnType("datetime(6)");

                    b.Property<int?>("userId")
                        .HasColumnType("int");

                    b.HasKey("TicketId");

                    b.HasIndex("userId");

                    b.ToTable("Ticket");

                    b.HasData(
                        new
                        {
                            TicketId = 1,
                            Description = "Ticketone",
                            FromData = new DateTime(2024, 10, 29, 23, 8, 24, 873, DateTimeKind.Local).AddTicks(3251),
                            Status = 2,
                            Title = "Testone",
                            ToData = new DateTime(2024, 10, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            userId = 1
                        },
                        new
                        {
                            TicketId = 2,
                            Description = "TicketTwo",
                            FromData = new DateTime(2024, 10, 29, 23, 8, 24, 873, DateTimeKind.Local).AddTicks(3291),
                            Status = 1,
                            Title = "TestTwo",
                            ToData = new DateTime(2024, 10, 29, 0, 0, 0, 0, DateTimeKind.Local),
                            userId = 2
                        });
                });

            modelBuilder.Entity("Ticket.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("varchar(255)");

                    b.Property<string>("job")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Age = 0,
                            UserName = "Mohamed",
                            job = "admin"
                        },
                        new
                        {
                            Id = 2,
                            Age = 0,
                            UserName = "Mostafa",
                            job = "student"
                        });
                });

            modelBuilder.Entity("Ticket.Domain.Models.TicketModule", b =>
                {
                    b.HasOne("Ticket.Domain.Models.User", "User")
                        .WithMany("Tickets")
                        .HasForeignKey("userId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Ticket.Domain.Models.User", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
